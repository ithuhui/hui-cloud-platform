server:
  port: 8000
spring:
  application:
    name: usercenter-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1/hui_cloud_uc?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat;日志用的filter:log4j;防御sql注入的filter:wall
      filters: stat
      #初始化时建立物理连接的个数
      initial-size: 1
      #最小连接池数量
      min-idle: 1
      #最大连接池数量
      max-active: 20
      #获取连接时最大等待时间
      max-wait: 60000
      #是否缓存preparedStatement
      pool-prepared-statements: false
      #用来检测连接是否有效的sql
      validation-query: select 'x'
      #申请连接时执行validationQuery检测连接是否有效
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效
      test-on-return: false
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      time-between-eviction-runs-millis: 6000
      min-evictable-idle-time-millis: 30000
      max-open-prepared-statements: 20
  redis:
    host: 127.0.0.1
    port: 6379
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        register: true
        # 服务停止时取消注册
        deregister: true
        service-name: ${spring.application.name}
        health-check-path: /actuator/health
        health-check-interval: 10s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        prefer-ip-address: true
        instance-id: ${spring.application.name}
# 日志配置
logging:
  config: classpath:logback-spring.xml

# mybatis-plus
mybatis-plus:
  mapper-locations: classpath*:/mapper/*/*.xml
  type-aliases-package: com.hui.cloud.uc.user.model.entity
  global-config:
    banner: false
    db-config:
      logic-not-delete-value: 0
      logic-delete-value: 1